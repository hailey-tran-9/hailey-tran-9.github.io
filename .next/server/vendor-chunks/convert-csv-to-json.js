"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/convert-csv-to-json";
exports.ids = ["vendor-chunks/convert-csv-to-json"];
exports.modules = {

/***/ "(rsc)/./node_modules/convert-csv-to-json/index.js":
/*!***************************************************!*\
  !*** ./node_modules/convert-csv-to-json/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n\r\nlet csvToJson = __webpack_require__(/*! ./src/csvToJson.js */ \"(rsc)/./node_modules/convert-csv-to-json/src/csvToJson.js\");\r\n\r\nconst encodingOps = {\r\n    utf8: 'utf8',\r\n    ucs2: 'ucs2',\r\n    utf16le: 'utf16le',\r\n    latin1: 'latin1',\r\n    ascii: 'ascii',\r\n    base64: 'base64',\r\n    hex: 'hex'\r\n};\r\n\r\n/**\r\n * Prints a digit as Number type (for example 32 instead of '32')\r\n */\r\nexports.formatValueByType = function (active = true) {\r\n  csvToJson.formatValueByType(active);\r\n  return this;\r\n};\r\n\r\n/**\r\n * If enabled, allows fields wrapped by quotation marks to be parsed correctly and not splitted \r\n */\r\nexports.supportQuotedField = function (active = false) {\r\n  csvToJson.supportQuotedField(active);\r\n  return this;\r\n};\r\n/**\r\n * Defines the field delimiter which will be used to split the fields\r\n */\r\nexports.fieldDelimiter = function (delimiter) {\r\n  csvToJson.fieldDelimiter(delimiter);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Defines the index where the header is defined\r\n */\r\nexports.indexHeader = function (index) {\r\n  csvToJson.indexHeader(index);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Defines how to match and parse a sub array\r\n */\r\nexports.parseSubArray = function (delimiter, separator) {\r\n  csvToJson.parseSubArray(delimiter, separator);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Defines a custom encoding to decode a file\r\n */\r\nexports.customEncoding = function (encoding) {\r\n  csvToJson.encoding = encoding;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Defines a custom encoding to decode a file\r\n */\r\nexports.utf8Encoding = function utf8Encoding() {\r\n  csvToJson.encoding = encodingOps.utf8;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Defines ucs2 encoding to decode a file\r\n */\r\nexports.ucs2Encoding = function () {\r\n  csvToJson.encoding = encodingOps.ucs2;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Defines utf16le encoding to decode a file\r\n */\r\nexports.utf16leEncoding = function () {\r\n  csvToJson.encoding = encodingOps.utf16le;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Defines latin1 encoding to decode a file\r\n */\r\nexports.latin1Encoding = function () {\r\n  csvToJson.encoding = encodingOps.latin1;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Defines ascii encoding to decode a file\r\n */\r\nexports.asciiEncoding = function () {\r\n  csvToJson.encoding = encodingOps.ascii;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Defines base64 encoding to decode a file\r\n */\r\nexports.base64Encoding = function () {\r\n  this.csvToJson = encodingOps.base64;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Defines hex encoding to decode a file\r\n */\r\nexports.hexEncoding = function () {\r\n  this.csvToJson = encodingOps.hex;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Parses .csv file and put its content into a file in json format.\r\n * @param {inputFileName} path/filename\r\n * @param {outputFileName} path/filename\r\n *\r\n */\r\nexports.generateJsonFileFromCsv = function(inputFileName, outputFileName) {\r\n  if (!inputFileName) {\r\n    throw new Error(\"inputFileName is not defined!!!\");\r\n  }\r\n  if (!outputFileName) {\r\n    throw new Error(\"outputFileName is not defined!!!\");\r\n  }\r\n  csvToJson.generateJsonFileFromCsv(inputFileName, outputFileName);\r\n};\r\n\r\n/**\r\n * Parses .csv file and put its content into an Array of Object in json format.\r\n * @param {inputFileName} path/filename\r\n * @return {Array} Array of Object in json format\r\n *\r\n */\r\nexports.getJsonFromCsv = function(inputFileName) {\r\n  if (!inputFileName) {\r\n    throw new Error(\"inputFileName is not defined!!!\");\r\n  }\r\n  return csvToJson.getJsonFromCsv(inputFileName);\r\n};\r\n\r\nexports.csvStringToJson = function(csvString) {\r\n  return csvToJson.csvStringToJson(csvString);\r\n};\r\n\r\n/**\r\n * Parses .csv file and put its content into a file in json format.\r\n * @param {inputFileName} path/filename\r\n * @param {outputFileName} path/filename\r\n *\r\n * @deprecated Use generateJsonFileFromCsv()\r\n */\r\nexports.jsonToCsv = function(inputFileName, outputFileName) {\r\n  csvToJson.generateJsonFileFromCsv(inputFileName, outputFileName);\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmVydC1jc3YtdG8tanNvbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMscUZBQW9CO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQixXQUFXLGdCQUFnQjtBQUMzQjtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsV0FBVyxnQkFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29udmVydC1jc3YtdG8tanNvbi9pbmRleC5qcz9hYmVhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxubGV0IGNzdlRvSnNvbiA9IHJlcXVpcmUoXCIuL3NyYy9jc3ZUb0pzb24uanNcIik7XHJcblxyXG5jb25zdCBlbmNvZGluZ09wcyA9IHtcclxuICAgIHV0Zjg6ICd1dGY4JyxcclxuICAgIHVjczI6ICd1Y3MyJyxcclxuICAgIHV0ZjE2bGU6ICd1dGYxNmxlJyxcclxuICAgIGxhdGluMTogJ2xhdGluMScsXHJcbiAgICBhc2NpaTogJ2FzY2lpJyxcclxuICAgIGJhc2U2NDogJ2Jhc2U2NCcsXHJcbiAgICBoZXg6ICdoZXgnXHJcbn07XHJcblxyXG4vKipcclxuICogUHJpbnRzIGEgZGlnaXQgYXMgTnVtYmVyIHR5cGUgKGZvciBleGFtcGxlIDMyIGluc3RlYWQgb2YgJzMyJylcclxuICovXHJcbmV4cG9ydHMuZm9ybWF0VmFsdWVCeVR5cGUgPSBmdW5jdGlvbiAoYWN0aXZlID0gdHJ1ZSkge1xyXG4gIGNzdlRvSnNvbi5mb3JtYXRWYWx1ZUJ5VHlwZShhY3RpdmUpO1xyXG4gIHJldHVybiB0aGlzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIElmIGVuYWJsZWQsIGFsbG93cyBmaWVsZHMgd3JhcHBlZCBieSBxdW90YXRpb24gbWFya3MgdG8gYmUgcGFyc2VkIGNvcnJlY3RseSBhbmQgbm90IHNwbGl0dGVkIFxyXG4gKi9cclxuZXhwb3J0cy5zdXBwb3J0UXVvdGVkRmllbGQgPSBmdW5jdGlvbiAoYWN0aXZlID0gZmFsc2UpIHtcclxuICBjc3ZUb0pzb24uc3VwcG9ydFF1b3RlZEZpZWxkKGFjdGl2ZSk7XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcbi8qKlxyXG4gKiBEZWZpbmVzIHRoZSBmaWVsZCBkZWxpbWl0ZXIgd2hpY2ggd2lsbCBiZSB1c2VkIHRvIHNwbGl0IHRoZSBmaWVsZHNcclxuICovXHJcbmV4cG9ydHMuZmllbGREZWxpbWl0ZXIgPSBmdW5jdGlvbiAoZGVsaW1pdGVyKSB7XHJcbiAgY3N2VG9Kc29uLmZpZWxkRGVsaW1pdGVyKGRlbGltaXRlcik7XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG4vKipcclxuICogRGVmaW5lcyB0aGUgaW5kZXggd2hlcmUgdGhlIGhlYWRlciBpcyBkZWZpbmVkXHJcbiAqL1xyXG5leHBvcnRzLmluZGV4SGVhZGVyID0gZnVuY3Rpb24gKGluZGV4KSB7XHJcbiAgY3N2VG9Kc29uLmluZGV4SGVhZGVyKGluZGV4KTtcclxuICByZXR1cm4gdGhpcztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBEZWZpbmVzIGhvdyB0byBtYXRjaCBhbmQgcGFyc2UgYSBzdWIgYXJyYXlcclxuICovXHJcbmV4cG9ydHMucGFyc2VTdWJBcnJheSA9IGZ1bmN0aW9uIChkZWxpbWl0ZXIsIHNlcGFyYXRvcikge1xyXG4gIGNzdlRvSnNvbi5wYXJzZVN1YkFycmF5KGRlbGltaXRlciwgc2VwYXJhdG9yKTtcclxuICByZXR1cm4gdGhpcztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBEZWZpbmVzIGEgY3VzdG9tIGVuY29kaW5nIHRvIGRlY29kZSBhIGZpbGVcclxuICovXHJcbmV4cG9ydHMuY3VzdG9tRW5jb2RpbmcgPSBmdW5jdGlvbiAoZW5jb2RpbmcpIHtcclxuICBjc3ZUb0pzb24uZW5jb2RpbmcgPSBlbmNvZGluZztcclxuICByZXR1cm4gdGhpcztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBEZWZpbmVzIGEgY3VzdG9tIGVuY29kaW5nIHRvIGRlY29kZSBhIGZpbGVcclxuICovXHJcbmV4cG9ydHMudXRmOEVuY29kaW5nID0gZnVuY3Rpb24gdXRmOEVuY29kaW5nKCkge1xyXG4gIGNzdlRvSnNvbi5lbmNvZGluZyA9IGVuY29kaW5nT3BzLnV0Zjg7XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG4vKipcclxuICogRGVmaW5lcyB1Y3MyIGVuY29kaW5nIHRvIGRlY29kZSBhIGZpbGVcclxuICovXHJcbmV4cG9ydHMudWNzMkVuY29kaW5nID0gZnVuY3Rpb24gKCkge1xyXG4gIGNzdlRvSnNvbi5lbmNvZGluZyA9IGVuY29kaW5nT3BzLnVjczI7XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG4vKipcclxuICogRGVmaW5lcyB1dGYxNmxlIGVuY29kaW5nIHRvIGRlY29kZSBhIGZpbGVcclxuICovXHJcbmV4cG9ydHMudXRmMTZsZUVuY29kaW5nID0gZnVuY3Rpb24gKCkge1xyXG4gIGNzdlRvSnNvbi5lbmNvZGluZyA9IGVuY29kaW5nT3BzLnV0ZjE2bGU7XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG4vKipcclxuICogRGVmaW5lcyBsYXRpbjEgZW5jb2RpbmcgdG8gZGVjb2RlIGEgZmlsZVxyXG4gKi9cclxuZXhwb3J0cy5sYXRpbjFFbmNvZGluZyA9IGZ1bmN0aW9uICgpIHtcclxuICBjc3ZUb0pzb24uZW5jb2RpbmcgPSBlbmNvZGluZ09wcy5sYXRpbjE7XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG4vKipcclxuICogRGVmaW5lcyBhc2NpaSBlbmNvZGluZyB0byBkZWNvZGUgYSBmaWxlXHJcbiAqL1xyXG5leHBvcnRzLmFzY2lpRW5jb2RpbmcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgY3N2VG9Kc29uLmVuY29kaW5nID0gZW5jb2RpbmdPcHMuYXNjaWk7XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG4vKipcclxuICogRGVmaW5lcyBiYXNlNjQgZW5jb2RpbmcgdG8gZGVjb2RlIGEgZmlsZVxyXG4gKi9cclxuZXhwb3J0cy5iYXNlNjRFbmNvZGluZyA9IGZ1bmN0aW9uICgpIHtcclxuICB0aGlzLmNzdlRvSnNvbiA9IGVuY29kaW5nT3BzLmJhc2U2NDtcclxuICByZXR1cm4gdGhpcztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBEZWZpbmVzIGhleCBlbmNvZGluZyB0byBkZWNvZGUgYSBmaWxlXHJcbiAqL1xyXG5leHBvcnRzLmhleEVuY29kaW5nID0gZnVuY3Rpb24gKCkge1xyXG4gIHRoaXMuY3N2VG9Kc29uID0gZW5jb2RpbmdPcHMuaGV4O1xyXG4gIHJldHVybiB0aGlzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFBhcnNlcyAuY3N2IGZpbGUgYW5kIHB1dCBpdHMgY29udGVudCBpbnRvIGEgZmlsZSBpbiBqc29uIGZvcm1hdC5cclxuICogQHBhcmFtIHtpbnB1dEZpbGVOYW1lfSBwYXRoL2ZpbGVuYW1lXHJcbiAqIEBwYXJhbSB7b3V0cHV0RmlsZU5hbWV9IHBhdGgvZmlsZW5hbWVcclxuICpcclxuICovXHJcbmV4cG9ydHMuZ2VuZXJhdGVKc29uRmlsZUZyb21Dc3YgPSBmdW5jdGlvbihpbnB1dEZpbGVOYW1lLCBvdXRwdXRGaWxlTmFtZSkge1xyXG4gIGlmICghaW5wdXRGaWxlTmFtZSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiaW5wdXRGaWxlTmFtZSBpcyBub3QgZGVmaW5lZCEhIVwiKTtcclxuICB9XHJcbiAgaWYgKCFvdXRwdXRGaWxlTmFtZSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFwib3V0cHV0RmlsZU5hbWUgaXMgbm90IGRlZmluZWQhISFcIik7XHJcbiAgfVxyXG4gIGNzdlRvSnNvbi5nZW5lcmF0ZUpzb25GaWxlRnJvbUNzdihpbnB1dEZpbGVOYW1lLCBvdXRwdXRGaWxlTmFtZSk7XHJcbn07XHJcblxyXG4vKipcclxuICogUGFyc2VzIC5jc3YgZmlsZSBhbmQgcHV0IGl0cyBjb250ZW50IGludG8gYW4gQXJyYXkgb2YgT2JqZWN0IGluIGpzb24gZm9ybWF0LlxyXG4gKiBAcGFyYW0ge2lucHV0RmlsZU5hbWV9IHBhdGgvZmlsZW5hbWVcclxuICogQHJldHVybiB7QXJyYXl9IEFycmF5IG9mIE9iamVjdCBpbiBqc29uIGZvcm1hdFxyXG4gKlxyXG4gKi9cclxuZXhwb3J0cy5nZXRKc29uRnJvbUNzdiA9IGZ1bmN0aW9uKGlucHV0RmlsZU5hbWUpIHtcclxuICBpZiAoIWlucHV0RmlsZU5hbWUpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihcImlucHV0RmlsZU5hbWUgaXMgbm90IGRlZmluZWQhISFcIik7XHJcbiAgfVxyXG4gIHJldHVybiBjc3ZUb0pzb24uZ2V0SnNvbkZyb21Dc3YoaW5wdXRGaWxlTmFtZSk7XHJcbn07XHJcblxyXG5leHBvcnRzLmNzdlN0cmluZ1RvSnNvbiA9IGZ1bmN0aW9uKGNzdlN0cmluZykge1xyXG4gIHJldHVybiBjc3ZUb0pzb24uY3N2U3RyaW5nVG9Kc29uKGNzdlN0cmluZyk7XHJcbn07XHJcblxyXG4vKipcclxuICogUGFyc2VzIC5jc3YgZmlsZSBhbmQgcHV0IGl0cyBjb250ZW50IGludG8gYSBmaWxlIGluIGpzb24gZm9ybWF0LlxyXG4gKiBAcGFyYW0ge2lucHV0RmlsZU5hbWV9IHBhdGgvZmlsZW5hbWVcclxuICogQHBhcmFtIHtvdXRwdXRGaWxlTmFtZX0gcGF0aC9maWxlbmFtZVxyXG4gKlxyXG4gKiBAZGVwcmVjYXRlZCBVc2UgZ2VuZXJhdGVKc29uRmlsZUZyb21Dc3YoKVxyXG4gKi9cclxuZXhwb3J0cy5qc29uVG9Dc3YgPSBmdW5jdGlvbihpbnB1dEZpbGVOYW1lLCBvdXRwdXRGaWxlTmFtZSkge1xyXG4gIGNzdlRvSnNvbi5nZW5lcmF0ZUpzb25GaWxlRnJvbUNzdihpbnB1dEZpbGVOYW1lLCBvdXRwdXRGaWxlTmFtZSk7XHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convert-csv-to-json/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convert-csv-to-json/src/csvToJson.js":
/*!***********************************************************!*\
  !*** ./node_modules/convert-csv-to-json/src/csvToJson.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\nlet fileUtils = __webpack_require__(/*! ././util/fileUtils */ \"(rsc)/./node_modules/convert-csv-to-json/src/util/fileUtils.js\");\r\nlet stringUtils = __webpack_require__(/*! ././util/stringUtils */ \"(rsc)/./node_modules/convert-csv-to-json/src/util/stringUtils.js\");\r\nlet jsonUtils = __webpack_require__(/*! ././util/jsonUtils */ \"(rsc)/./node_modules/convert-csv-to-json/src/util/jsonUtils.js\");\r\n\r\nconst newLine = /\\r?\\n/;\r\nconst defaultFieldDelimiter = \";\";\r\n\r\nclass CsvToJson {\r\n\r\n  formatValueByType(active) {\r\n    this.printValueFormatByType = active;\r\n    return this;\r\n  }\r\n\r\n  supportQuotedField(active) {\r\n    this.isSupportQuotedField = active;\r\n    return this;\r\n  }\r\n\r\n  fieldDelimiter(delimiter) {\r\n    this.delimiter = delimiter;\r\n    return this;\r\n  }\r\n\r\n  indexHeader(indexHeader) {\r\n    if(isNaN(indexHeader)){\r\n        throw new Error('The index Header must be a Number!');\r\n    }\r\n    this.indexHeader = indexHeader;\r\n    return this;\r\n  }\r\n\r\n\r\n  parseSubArray(delimiter = '*',separator = ',') {\r\n    this.parseSubArrayDelimiter = delimiter;\r\n    this.parseSubArraySeparator = separator;\r\n  }\r\n\r\n  encoding(encoding){\r\n    this.encoding = encoding;\r\n    return this;\r\n  }\r\n\r\n  generateJsonFileFromCsv(fileInputName, fileOutputName) {\r\n    let jsonStringified = this.getJsonFromCsvStringified(fileInputName);\r\n    fileUtils.writeFile(jsonStringified, fileOutputName);\r\n  }\r\n\r\n  getJsonFromCsvStringified(fileInputName) {\r\n    let json = this.getJsonFromCsv(fileInputName);\r\n    let jsonStringified = JSON.stringify(json, undefined, 1);\r\n    jsonUtils.validateJson(jsonStringified);\r\n    return jsonStringified;\r\n  }\r\n\r\n  getJsonFromCsv(fileInputName) {\r\n    let parsedCsv = fileUtils.readFile(fileInputName, this.encoding);\r\n    return this.csvToJson(parsedCsv);\r\n  }\r\n\r\n  csvStringToJson(csvString) {\r\n    return this.csvToJson(csvString);\r\n  }\r\n\r\n  csvToJson(parsedCsv) {\r\n  \tthis.validateInputConfig();\r\n    let lines = parsedCsv.split(newLine);\r\n    let fieldDelimiter = this.getFieldDelimiter();\r\n    let index = this.getIndexHeader();\r\n    let headers;\r\n    \r\n    if(this.isSupportQuotedField){\r\n      headers = this.split(lines[index]);\r\n    } else {\r\n      headers = lines[index].split(fieldDelimiter);\r\n    }\r\n    \r\n    while(!stringUtils.hasContent(headers) && index <= lines.length){\r\n        index = index + 1;\r\n        headers = lines[index].split(fieldDelimiter);\r\n    }\r\n\r\n    let jsonResult = [];\r\n    for (let i = (index + 1); i < lines.length; i++) {\r\n        let currentLine;\r\n        if(this.isSupportQuotedField){\r\n            currentLine = this.split(lines[i]);\r\n        }\r\n        else{\r\n            currentLine = lines[i].split(fieldDelimiter);\r\n        }\r\n        if (stringUtils.hasContent(currentLine)) {\r\n            jsonResult.push(this.buildJsonResult(headers, currentLine));\r\n        }\r\n       }\r\n    return jsonResult;\r\n  }\r\n\r\n  getFieldDelimiter() {\r\n    if (this.delimiter) {\r\n      return this.delimiter;\r\n    }\r\n    return defaultFieldDelimiter;\r\n  }\r\n\r\n  getIndexHeader(){\r\n    if(this.indexHeader !== null && !isNaN(this.indexHeader)){\r\n        return this.indexHeader;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  buildJsonResult(headers, currentLine) {\r\n    let jsonObject = {};\r\n    for (let j = 0; j < headers.length; j++) {\r\n      let propertyName = stringUtils.trimPropertyName(headers[j]);\r\n      let value = currentLine[j];\r\n\r\n      if(this.isParseSubArray(value)){\r\n        value = this.buildJsonSubArray(value);\r\n      }\r\n\r\n      if (this.printValueFormatByType && !Array.isArray(value)) {\r\n        value = stringUtils.getValueFormatByType(currentLine[j]);\r\n      }\r\n\r\n      jsonObject[propertyName] = value;\r\n    }\r\n    return jsonObject;\r\n  }\r\n\r\n  buildJsonSubArray(value) {\r\n    let extractedValues = value.substring(\r\n        value.indexOf(this.parseSubArrayDelimiter) + 1,\r\n        value.lastIndexOf(this.parseSubArrayDelimiter)\r\n    );\r\n    extractedValues.trim();\r\n    value = extractedValues.split(this.parseSubArraySeparator);\r\n    if(this.printValueFormatByType){\r\n      for(let i=0; i < value.length; i++){\r\n        value[i] = stringUtils.getValueFormatByType(value[i]);\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  isParseSubArray(value){\r\n    if(this.parseSubArrayDelimiter){\r\n      if (value && (value.indexOf(this.parseSubArrayDelimiter) === 0 && value.lastIndexOf(this.parseSubArrayDelimiter) === (value.length - 1))) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  validateInputConfig(){\r\n  \tif(this.isSupportQuotedField) {\r\n  \t \tif(this.getFieldDelimiter() === '\"'){\r\n  \t \t\tthrow new Error('When SupportQuotedFields is enabled you cannot defined the field delimiter as quote -> [\"]');\r\n  \t \t}\r\n  \t \tif(this.parseSubArraySeparator === '\"'){\r\n  \t \t\tthrow new Error('When SupportQuotedFields is enabled you cannot defined the field parseSubArraySeparator as quote -> [\"]');\r\n  \t \t}\r\n  \t \tif(this.parseSubArrayDelimiter === '\"'){\r\n  \t \t\tthrow new Error('When SupportQuotedFields is enabled you cannot defined the field parseSubArrayDelimiter as quote -> [\"]');\r\n  \t \t}\r\n  \t}\r\n  }\r\n\r\n  hasQuotes(line) {\r\n    return line.includes('\"');\r\n  }\r\n\r\n  split(line) {\r\n    if(line.length == 0){\r\n      return [];\r\n    }\r\n    let delim = this.getFieldDelimiter();\r\n    let subSplits = [''];\r\n    if (this.hasQuotes(line)) {\r\n        let chars = line.split('');\r\n\r\n        let subIndex = 0;\r\n        let startQuote = false;\r\n        let isDouble = false;\r\n        chars.forEach((c, i, arr) => {\r\n            if (isDouble) { //when run into double just pop it into current and move on\r\n                subSplits[subIndex] += c;\r\n                isDouble = false;\r\n                return;\r\n            }\r\n\r\n            if (c != '\"' && c != delim ) {\r\n                subSplits[subIndex] += c;\r\n            } else if(c == delim && startQuote){\r\n                subSplits[subIndex] += c;\r\n            } else if( c == delim ){\r\n                subIndex++\r\n                subSplits[subIndex] = '';\r\n                return;\r\n            } else {\r\n                if (arr[i + 1] === '\"') {\r\n                    //Double quote\r\n                    isDouble = true;\r\n                    //subSplits[subIndex] += c; //Skip because this is escaped quote\r\n                } else {\r\n                    if (!startQuote) {\r\n                        startQuote = true;\r\n                        //subSplits[subIndex] += c; //Skip because we don't want quotes wrapping value\r\n                    } else {\r\n                        //end\r\n                        startQuote = false;\r\n                        //subSplits[subIndex] += c; //Skip because we don't want quotes wrapping value\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if(startQuote){\r\n            throw new Error('Row contains mismatched quotes!');\r\n        }\r\n        return subSplits;\r\n    } else {\r\n        return line.split(delim);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = new CsvToJson();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convert-csv-to-json/src/csvToJson.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convert-csv-to-json/src/util/fileUtils.js":
/*!****************************************************************!*\
  !*** ./node_modules/convert-csv-to-json/src/util/fileUtils.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\nlet fs = __webpack_require__(/*! fs */ \"fs\");\r\n\r\nclass FileUtils {\r\n\r\n    readFile(fileInputName, encoding) {\r\n        return fs.readFileSync(fileInputName, encoding).toString();\r\n    }\r\n\r\n    writeFile(json, fileOutputName) {\r\n        fs.writeFile(fileOutputName, json, function (err) {\r\n            if (err) {\r\n                throw err;\r\n            } else {\r\n                console.log('File saved: ' + fileOutputName);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\nmodule.exports = new FileUtils();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmVydC1jc3YtdG8tanNvbi9zcmMvdXRpbC9maWxlVXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLFNBQVMsbUJBQU8sQ0FBQyxjQUFJO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb252ZXJ0LWNzdi10by1qc29uL3NyYy91dGlsL2ZpbGVVdGlscy5qcz8zZmVkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmxldCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XHJcblxyXG5jbGFzcyBGaWxlVXRpbHMge1xyXG5cclxuICAgIHJlYWRGaWxlKGZpbGVJbnB1dE5hbWUsIGVuY29kaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIGZzLnJlYWRGaWxlU3luYyhmaWxlSW5wdXROYW1lLCBlbmNvZGluZykudG9TdHJpbmcoKTtcclxuICAgIH1cclxuXHJcbiAgICB3cml0ZUZpbGUoanNvbiwgZmlsZU91dHB1dE5hbWUpIHtcclxuICAgICAgICBmcy53cml0ZUZpbGUoZmlsZU91dHB1dE5hbWUsIGpzb24sIGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0ZpbGUgc2F2ZWQ6ICcgKyBmaWxlT3V0cHV0TmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSBuZXcgRmlsZVV0aWxzKCk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convert-csv-to-json/src/util/fileUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convert-csv-to-json/src/util/jsonUtils.js":
/*!****************************************************************!*\
  !*** ./node_modules/convert-csv-to-json/src/util/jsonUtils.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("\r\n\r\nclass JsonUtil {\r\n\r\n    validateJson(json) {\r\n        try {\r\n            JSON.parse(json);\r\n        } catch (err) {\r\n            throw Error('Parsed csv has generated an invalid json!!!\\n' + err);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = new JsonUtil();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmVydC1jc3YtdG8tanNvbi9zcmMvdXRpbC9qc29uVXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29udmVydC1jc3YtdG8tanNvbi9zcmMvdXRpbC9qc29uVXRpbHMuanM/YWZlZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jbGFzcyBKc29uVXRpbCB7XHJcblxyXG4gICAgdmFsaWRhdGVKc29uKGpzb24pIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBKU09OLnBhcnNlKGpzb24pO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcignUGFyc2VkIGNzdiBoYXMgZ2VuZXJhdGVkIGFuIGludmFsaWQganNvbiEhIVxcbicgKyBlcnIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbmV3IEpzb25VdGlsKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convert-csv-to-json/src/util/jsonUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convert-csv-to-json/src/util/stringUtils.js":
/*!******************************************************************!*\
  !*** ./node_modules/convert-csv-to-json/src/util/stringUtils.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("\r\n\r\nclass StringUtils {\r\n\r\n    trimPropertyName(value) {\r\n        return value.replace(/\\s/g, '');\r\n    }\r\n\r\n    getValueFormatByType(value) {\r\n        if(value === undefined || value === ''){\r\n            return String();\r\n        }\r\n        //is Number\r\n        let isNumber = !isNaN(value);\r\n        if (isNumber) {\r\n            return Number(value);\r\n        }\r\n        // is Boolean\r\n        if(value === \"true\" || value === \"false\"){\r\n            return JSON.parse(value.toLowerCase());\r\n        }\r\n        return String(value);\r\n    }\r\n\r\n    hasContent(values) {\r\n        if (values.length > 0) {\r\n            for (let i = 0; i < values.length; i++) {\r\n                if (values[i]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nmodule.exports = new StringUtils();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmVydC1jc3YtdG8tanNvbi9zcmMvdXRpbC9zdHJpbmdVdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG1CQUFtQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb252ZXJ0LWNzdi10by1qc29uL3NyYy91dGlsL3N0cmluZ1V0aWxzLmpzPzcwN2MiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY2xhc3MgU3RyaW5nVXRpbHMge1xyXG5cclxuICAgIHRyaW1Qcm9wZXJ0eU5hbWUodmFsdWUpIHtcclxuICAgICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvXFxzL2csICcnKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRWYWx1ZUZvcm1hdEJ5VHlwZSh2YWx1ZSkge1xyXG4gICAgICAgIGlmKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09ICcnKXtcclxuICAgICAgICAgICAgcmV0dXJuIFN0cmluZygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvL2lzIE51bWJlclxyXG4gICAgICAgIGxldCBpc051bWJlciA9ICFpc05hTih2YWx1ZSk7XHJcbiAgICAgICAgaWYgKGlzTnVtYmVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBOdW1iZXIodmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBpcyBCb29sZWFuXHJcbiAgICAgICAgaWYodmFsdWUgPT09IFwidHJ1ZVwiIHx8IHZhbHVlID09PSBcImZhbHNlXCIpe1xyXG4gICAgICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh2YWx1ZS50b0xvd2VyQ2FzZSgpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgaGFzQ29udGVudCh2YWx1ZXMpIHtcclxuICAgICAgICBpZiAodmFsdWVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZXNbaV0pIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbmV3IFN0cmluZ1V0aWxzKCk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convert-csv-to-json/src/util/stringUtils.js\n");

/***/ })

};
;